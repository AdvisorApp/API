### This is the main way to configure the application (other than annotations).
### This fils is in Yaml format but you can also do this using the traditional
### Java properties file.

spring:
  profiles: default
  jmx:
    enabled: false
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1/advisorapp
    username: root
    password: root
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
    hibernate.ddl-auto: create-drop

server:
  port: 8090

#todo: make sure to always enable security in production
security:
  basic:
    enabled: false

#management endpoints on a separate port
management:
  port: 8091
  security:
    enabled: false # management port is internal only. no need to secure it.

#default project info followed by actual injected pom-specified values.
project:
  name: advisorapp-api
  version: 0.1
  description: advisorapp default description

info:
  build:
    artifact: ${project.artifactId}
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}

hotel.service:
  name: 'default profile:'

---

spring:
  profiles: production
  datasource:
    url: jdbc:mysql://127.0.0.1:1664/advisorapp

---

spring:
  profiles: test

hotel.service:
  name: 'test profile:'
